apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: add-tech-docs
  title: Add TechDocs to a previously registered component
  description: "Create a new PR with an updated catalog-info.yaml file and TechDocs required files."
spec:
  owner: unspecified # TODO: Define who the owner of this template is. This is likely the team who own the relationship with Roadie. e.g. group:customer-name/platform
  type: service

  # These are the steps which are rendered in the frontend with the form input.
  parameters:
    - title: Select an Entity
      required:
        - entity
      properties:
        entity:
          type: string
          ui:field: EntityPicker

        techDocsPath:
          title: Path
          description: 'The path to the TechDocs directory. This can be a directory in the repository using docs:.; or linked externally using url:{url}.'
          type: string
          default: 'docs:.'

  # These are the steps that are executed in series in the scaffolder backend.
  steps:
    - id: backstage_request
      name: Retrieve Entity information from Roadie
      action: http:backstage:request
      input:
        method: 'GET'
        path: "/catalog/entities/by-name/${{ parameters.entity | replace(':', '/') }}"
    - id: log-result
      action: debug:log
      name: Log identified manifest location
      input:
        message: "Retrieving catalog manifest from ${{ steps['backstage_request'].output.body.metadata.annotations['backstage.io/managed-by-origin-location'] }}"
    - id: fetch-catalog-manifest
      name: Fetch Catalog manifest file
      action: fetch:plain
      input:
        url: "${{ steps['backstage_request'].output.body.metadata.annotations['backstage.io/managed-by-origin-location'] | replace('url:', '') | replace('catalog-info.yaml', '') }}"
        targetPath: 'fetch-folder'
    - id: move-manifest-to-workbench
      name: Move manifest file to a standalone location
      action: fs:rename
      input:
        files:
          - from: 'fetch-folder/catalog-info.yaml'
            to: './manifest-folder/catalog-info.yaml'
    - id: parse-catalog-manifest
      name: Parse retrieved catalog manifest file
      action: roadiehq:utils:fs:parse
      input:
        path: './manifest-folder/catalog-info.yaml'
    - id: log-result
      name: Display current catalog manifest
      action: debug:log
      input:
        message: 'Catalog Manifest content: ${{ steps["parse-catalog-manifest"].output.content }}'
    - id: identify-repo-and-owner
      name: Identify repository and owner
      action: roadiehq:utils:jsonata
      input:
        data: "${{ steps['backstage_request'].output.body }}"
        expression: '$.metadata.annotations.(
                      $slug := $substringAfter($."backstage.io/managed-by-location", "url:https://github.com/");
                      $owner := $substringBefore($slug, "/");
                      {
                          "slug": $slug,
                          "owner": $owner,
                          "repo": $substringBefore($substringAfter($slug & $owner & "/", "/"), "/")
                      }
                    )'
    - id: log-result
      name: Display retrieved params
      action: debug:log
      input:
        message: 'Creating a PR to repo ${{ steps["identify-repo-and-owner"].output.result.repo }} owned by ${{ steps["identify-repo-and-owner"].output.result.owner }}'
    - id: fetch-techDocs-template
      action: fetch:template
      input:
        url: ./techDocs
        templateFileExtension: .njk
        targetPath: './manifest-folder/'
        values:
          repo: '${{ steps["identify-repo-and-owner"].output.result.owner }}/${{ steps["identify-repo-and-owner"].output.result.repo }}'
    - id: update-annotations
      name: Add annotation entry
      action: roadiehq:utils:jsonata:yaml:transform 
      input:
        path: './manifest-folder/catalog-info.yaml'
        loadAll: true
        expression: '$ ~> | $.metadata.annotations | $merge([$.metadata.annotations, { "backstage.io/techdocs-ref": "doc:."} ]) |' 
    - id: write-catalog-to-file
      name: Overwrite the existing catalog file with new contents
      action: roadiehq:utils:fs:write
      input:
        path: './manifest-folder/catalog-info.yaml'
        content: ${{ steps["update-annotations"].output.result }}
    - id: parse-catalog-manifest
      name: Parse modified catalog manifest file
      action: roadiehq:utils:fs:parse
      input:
        path: './manifest-folder/catalog-info.yaml'
    - id: log-result
      name: Display modified catalog manifest
      action: debug:log
      input:
        message: 'Catalog Manifest content: ${{ steps["parse-catalog-manifest"].output.content }}'
    - id: create-pr
      name: Create a pull request
      action: publish:github:pull-request
      input:
        sourcePath: ./manifest-folder/
        targetPath: ./
        repoUrl: github.com?repo=${{ steps["identify-repo-and-owner"].output.result.repo }}&owner=${{ steps["identify-repo-and-owner"].output.result.owner }}
        branchName: add-tech-docs-${{ '' | now }}
        title: Update entity with TechDocs annotations in catalog manifest
        description: This PR updates a metadata file about this catalog entity to enable the TechDocs plugin.
  
  # These are the outputs from the backend steps, and can be displayed in the frontend after completion.
  output:
    links:
      - title: View the pull request on GitHub
        icon: github
        url: ${{ steps['createPullRequest'].output.remoteUrl }}